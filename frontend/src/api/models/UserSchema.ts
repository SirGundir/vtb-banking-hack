/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSchema
 */
export interface UserSchema {
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    language: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    firstName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserSchema
     */
    emailVerified?: boolean;
}

/**
 * Check if a given object implements the UserSchema interface.
 */
export function instanceOfUserSchema(value: object): value is UserSchema {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    return true;
}

export function UserSchemaFromJSON(json: any): UserSchema {
    return UserSchemaFromJSONTyped(json, false);
}

export function UserSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'],
        'language': json['language'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'emailVerified': json['emailVerified'] == null ? undefined : json['emailVerified'],
    };
}

export function UserSchemaToJSON(json: any): UserSchema {
    return UserSchemaToJSONTyped(json, false);
}

export function UserSchemaToJSONTyped(value?: UserSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'language': value['language'],
        'firstName': value['firstName'],
        'emailVerified': value['emailVerified'],
    };
}

